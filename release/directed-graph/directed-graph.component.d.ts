import { ElementRef, TemplateRef, EventEmitter, QueryList } from '@angular/core';
import { BaseChartComponent, ViewDimensions, ColorHelper } from '@swimlane/ngx-charts';
export declare class DirectedGraphComponent extends BaseChartComponent {
    legend: boolean;
    nodes: any[];
    links: any[];
    activeEntries: any[];
    zoomLevel: number;
    panOffset: any;
    orientation: string;
    curve: any;
    activate: EventEmitter<any>;
    deactivate: EventEmitter<any>;
    linkTemplate: TemplateRef<any>;
    nodeTemplate: TemplateRef<any>;
    defsTemplate: TemplateRef<any>;
    chart: ElementRef;
    nodeElements: QueryList<ElementRef>;
    linkElements: QueryList<ElementRef>;
    colors: ColorHelper;
    dims: ViewDimensions;
    margin: number[];
    results: any[];
    seriesDomain: any;
    transform: string;
    legendOptions: any;
    isPanning: boolean;
    initialized: boolean;
    graph: any;
    graphDims: any;
    _nodes: any[];
    _links: any[];
    _oldLinks: any[];
    groupResultsBy: (node: any) => string;
    update(): void;
    ngAfterViewInit(): void;
    draw(): void;
    createGraph(): void;
    generateLine(points: any, interpolation?: string): any;
    zoom($event: MouseEvent, direction: any): void;
    pan(event: any): void;
    updateTransform(): void;
    onClick(data: any, node: any): void;
    onActivate(event: any): void;
    onDeactivate(event: any): void;
    getSeriesDomain(): any[];
    trackLinkBy(index: any, link: any): any;
    trackNodeBy(index: any, node: any): any;
    setColors(): void;
    getLegendOptions(): {
        scaleType: string;
        domain: any;
        colors: ColorHelper;
    };
    mousemove($event: MouseEvent): void;
    mouseup(node: any, $event: MouseEvent): void;
}
